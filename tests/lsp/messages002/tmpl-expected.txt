{"jsonrpc":"2.0","id":0,"result":{"capabilities":{"textDocumentSync":{"openClose":true,"save":{"includeText":true}},"completionProvider":{"triggerCharacters":[],"allCommitCharacters":[]},"hoverProvider":true,"signatureHelpProvider":{},"declarationProvider":false,"definitionProvider":{"workDoneProgress":false},"typeDefinitionProvider":false,"implementationProvider":false,"referencesProvider":false,"documentHighlightProvider":false,"documentSymbolProvider":{},"codeActionProvider":{"codeActionKinds":["case-split","generate-def","make-case"],"resolveProvider":false},"codeLensProvider":{},"documentLinkProvider":{},"colorProvider":false,"documentFormattingProvider":false,"documentRangeFormattingProvider":false,"renameProvider":false,"foldingRangeProvider":false,"executeCommandProvider":{"commands":[]},"selectionRangeProvider":false,"linkedEditingRangeProvider":false,"callHierarchyProvider":false,"monikerProvider":false,"workspaceSymbolProvider":false,"workspace":{"workspaceFolders":{"supported":false},"fileOperations":{}}},"serverInfo":{"name":"idris2-lsp","version":"0.1"}}}
{"jsonrpc":"2.0","method":"textDocument/publishDiagnostics","params":{"uri":"file://PATH_ROOT_PROJECT/Foo.idr","version":1,"diagnostics":[]}}
{"jsonrpc":"2.0","id":1,"result":[{"name":"foo","kind":13,"deprecated":null,"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":3}},"selectionRange":{"start":{"line":0,"character":0},"end":{"line":0,"character":3}}},{"name":"foo","kind":12,"deprecated":null,"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":17}},"selectionRange":{"start":{"line":0,"character":0},"end":{"line":0,"character":17}}},{"name":"k","kind":13,"deprecated":null,"range":{"start":{"line":1,"character":4},"end":{"line":1,"character":5}},"selectionRange":{"start":{"line":1,"character":4},"end":{"line":1,"character":5}}}]}
{"jsonrpc":"2.0","id":2,"result":[{"title":"Make lemma of Main.foo_rhs","kind":"refactor.rewrite.auto","diagnostics":[],"isPreferred":false,"edit":{"changes":{"file://PATH_ROOT_PROJECT/Foo.idr":[{"range":{"start":{"line":0,"character":0},"end":{"line":0,"character":0}},"newText":"foo_rhs : Nat -> Bool\n\n"},{"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":16}},"newText":"foo_rhs k"}]}}},{"title":"Make with of Main.foo_rhs","kind":"refactor.rewrite.auto","diagnostics":[],"isPreferred":false,"edit":{"changes":{"file://PATH_ROOT_PROJECT/Foo.idr":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":15}},"newText":"foo k with (_)\n  foo k | with_pat = ?foo_rhs_rhs"}]}}},{"title":"Make case for hole ?foo_rhs","kind":"make-case","diagnostics":[],"isPreferred":false,"edit":{"changes":{"file://PATH_ROOT_PROJECT/Foo.idr":[{"range":{"start":{"line":1,"character":0},"end":{"line":1,"character":16}},"newText":"foo k = case _ of\n             case_val => ?foo_rhs"}]}}},{"title":"Expression search on foo_rhs as ~ True ...","kind":"refactor.rewrite.auto","diagnostics":[],"isPreferred":false,"edit":{"changes":{"file://PATH_ROOT_PROJECT/Foo.idr":[{"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":16}},"newText":"True"}]}}},{"title":"Expression search on foo_rhs as ~ False ...","kind":"refactor.rewrite.auto","diagnostics":[],"isPreferred":false,"edit":{"changes":{"file://PATH_ROOT_PROJECT/Foo.idr":[{"range":{"start":{"line":1,"character":8},"end":{"line":1,"character":16}},"newText":"False"}]}}}]}
{"jsonrpc":"2.0","id":3,"result":null}
